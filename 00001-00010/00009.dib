#!markdown

## Challenge #8

A Pythagorean triplet is a set of three natural numbers, a < b < c, for which a^2 + b^2 = c^2

There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.

#!fsharp

let naturals = Seq.initInfinite (int64 >> ((+) 1L))

let possibleA = naturals |> Seq.skip 2 |> Seq.take 500
let possibleB = naturals |> Seq.skip 3 |> Seq.take 499

let hypot a b = b, (a * a + b * b) |> float |> sqrt
let isInteger (x: float) = x |> floor = x

let (a, b, c, _) = possibleA |> 
    Seq.collect (
        fun a -> possibleB |> 
            (Seq.map (hypot a)) |> 
            (Seq.filter (snd >> isInteger)) |> 
            (Seq.map (fun (b, c) -> (a, b, (int64 c), a + b + (int64 c))))
    ) |>
    (Seq.find (fun (a, b, c, sum) -> sum = 1000))

a * b * c
